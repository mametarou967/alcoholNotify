# -*- coding: utf-8 -*-

# bluetooth
from bluepy.btle import DefaultDelegate, Scanner, BTLEException
import sys
import struct
from datetime import datetime
# GPS
import serial
import micropyGPS
import threading
import time

# GPS setup
gpsLatitude = 0.0
gpsLongitude = 0.0
gpsValid = False


gps = micropyGPS.MicropyGPS(9, 'dd') # MicroGPS????????????
                                     # ?????????????????????

def rungps(): # GPS?????????GPS???????????
    s = serial.Serial('/dev/serial0', 9600, timeout=10)
    s.readline() # ???1??????????????????????????
    while True:
        sentence = s.readline().decode('utf-8') # GPS????????????????
        if sentence[0] != '$': # ???'$'????????
            continue
        for x in sentence: # ???????????GPS???????????????????
            gps.update(x)

gpsthread = threading.Thread(target=rungps, args=()) # ????????????????
gpsthread.daemon = True
gpsthread.start() # ???????


class ScanDelegate(DefaultDelegate):
    def __init__(self): # ???????
        DefaultDelegate.__init__(self)
        self.lastseq = None
        self.lasttime = datetime.fromtimestamp(0)

    def handleDiscovery(self, dev, isNewDev, isNewData):
        if isNewDev or isNewData: # ????????????????
            for (adtype, desc, value) in dev.getScanData(): # ???????????
                if desc == 'Manufacturer' and value[0:4] == 'ffff': # ????companyID
                    __delta = datetime.now() - self.lasttime
                    # ????????10???????????seq???????????????????????????????
                    if value[4:6] != self.lastseq and __delta.total_seconds() > 11:
                        self.lastseq = value[4:6] # Seq??????
                        self.lasttime = datetime.now()
                        (alcoholValue, volt) = struct.unpack('<hh', bytes.fromhex(value[6:])) # h?2Byte???2??????
                        print('alcoholValue= {0},volt = {1} V'.format( alcoholValue, volt/100))
                        print('ido,keido: %2.8f, %2.8f' % (gpsLatitude, gpsLongitude))

if __name__ == "__main__":
    scanner = Scanner().withDelegate(ScanDelegate())
    while True:
        # for gps module
        if gps.clean_sentences > 20: # ????????????????????????
            h = gps.timestamp[0] if gps.timestamp[0] < 24 else gps.timestamp[0] - 24
            gpsLatitude = gps.latitude[0]
            gpsLongitude = gps.longitude[0]
            if gpsLatitude > 0 and gpsLongitude > 0:
                gpsValid = True
        # for bluetooth
        try:
            scanner.scan(5.0) # ?????????????????????ScanDelegate????
        except BTLEException:
            ex, ms, tb = sys.exc_info()
            print('BLE exception '+str(type(ms)) + ' at ' + sys._getframe().f_code.co_name)

